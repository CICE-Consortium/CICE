#!/bin/csh -f

echo " "
echo "${0}"

set initargv = ( $argv[*] )

set helpheader = 0
set dash = "-"
set spval = "UnDeFiNeD"
set mach = $spval
set baseCom = $spval
set baseGen = $spval
set testid = $spval
set acct = $spval

if ($#argv < 1) then
  set helpheader = 1
endif

# Check for -h
while (1)
  if ($#argv < 1) break;
  if ("$argv[1]" =~ ${dash}h* ) then
    set helpheader = 1
  endif
  shift argv
end

#------------------------------------------------------------
# Help output

if ( $helpheader ) then
cat << EOF1

NAME   
      run.suite - fully automated testing script that goes through the following steps:
                1. Clone the CICE repository into a new directory
                2. Generate a baseline (optional)
                3. Run the full base_suite
                4. Post the results of the suite to CDash
        -h help
        -1 account number for queue manager (default is defined in env.<machine>)
        -m machine, machine name (required)
           Available -m options are in configuration/scripts/machines and include:
EOF1
      set soptions1 = `ls -1 configuration/scripts/machines | grep Macros | sed 's/Macros.//g' `
      set soptions = `echo $soptions1 | fmt -1 | sort `
      foreach sopt ($soptions)
        echo "             $sopt"
      end
cat << EOF1
        -bg cice version name for generate, directory under the baseline directory where 
            baselines are stored
        -bc cice version name for compare, directory under the baseline directory where 
            baselines are stored (required)
        -testid test ID, user-defined indentifier for test (required)

      EXAMPLES:
      ./run.suite -m conrad -testid nightly00 -bc cicev6.0.0
      ./run.suite -m conrad -testid nightly00 -bc cicev6.0.0 -bg cicev6.0.1
EOF1

exit -1
endif

#------------------------------------------------------------
# Read in command line arguments

set argv = ( $initargv[*] )

while (1)
  if ( $#argv < 1 ) break;
  set option = $argv[1];
  shift argv
  if ( $#argv < 1 ) then
    echo "${0}: ERROR1 in $option"
    exit -1
  endif
  if ($argv[1] =~ $dash* ) then
    echo "${0}: ERROR2 in $option"
    exit -1
  endif

  switch ( $option )
    case "-m":
      set mach = $argv[1]
      breaksw
    case "-a":
      set acct = $argv[1]
      breaksw
    case "-bc":
      set baseCom = $argv[1]
      breaksw
    case "-bg":
      set baseGen = $argv[1]
      breaksw
    case "-testid":
      set testid = $argv[1]
      breaksw
    default:
      echo "${0}: ERROR unknown option $option, use -h for help"
      exit -1
      breaksw
  endsw
  shift argv
end

if ($baseCom == $spval) then
  echo "${0}: ERROR in arguments, -bc is required"
  exit -1
endif

if ($testid == $spval) then
  echo "${0}: ERROR in arguments, -testid is required"
  exit -1
endif

set gitDir = "./CICE.${testid}"

git clone --recursive https://github.com/CICE-Consortium/CICE.git $gitDir

cd $gitDir

echo "Running ./create.case"
if ($acct = $spval) then
  if ($baseGen == $spval) then
    ./create.case -m ${mach} -ts base_suite -testid ${testid} -bc ${baseCom} -report
  else
    ./create.case -m ${mach} -ts base_suite -testid ${testid} -bc ${baseCom} -bg ${baseGen} -report
  endif
else
  if ($baseGen == $spval) then
    ./create.case -m ${mach} -ts base_suite -testid ${testid} -bc ${baseCom} -report -a $acct
  else
    ./create.case -m ${mach} -ts base_suite -testid ${testid} -bc ${baseCom} -bg ${baseGen} \
                  -report -a $acct
  endif
endif

echo "---"
echo "CICE run.suite completed"
