.. _tabnamelist:

Table of namelist options
=========================

==============================
Comprehensive Namelist Options
==============================

.. _tab-namelist:

.. csv-table:: Table 7
   :header: "variable", "options/format", "description", "recommended value"
   :widths: 15, 15, 30, 15 

   "*setup_nml*", "", "", ""
   "", "", "*Time, Diagnostics*", ""
   "``days_per_year``", "``360`` or ``365``", "number of days in a model year", "365"
   "``use_leap_years``", "true/false", "if true, include leap days", ""
   "``year_init``", "yyyy", "the initial year, if not using restart", ""
   "``istep0``", "integer", "initial time step number", "0"
   "``dt``", "seconds", "thermodynamics time step length", "3600."
   "``npt``", "integer", "total number of time steps to take", ""
   "``ndtd``", "integer", "number of dynamics/advection/ridging/steps per thermo timestep", "1"
   "", "", "*Initialization/Restarting*", ""
   "``runtype``", "``initial``", "start from ``ice_ic``", ""
   "", "``continue``", "restart using ``pointer_file``", ""
   "``ice_ic``", "``default``", "latitude and sst dependent", "default"
   "", "``none``", "no ice", ""
   "", "path/file", "restart file name", ""
   "``restart``", "true/false", "initialize using restart file", "``.true.``"
   "``use_restart_time``", "true/false", "set initial date using restart file", "``.true.``"
   "``restart_format``", "nc", "read/write  restart files (use with PIO)", ""
   "", "bin", "read/write binary restart files", ""
   "``lcdf64``", "true/false", "if true, use 64-bit  format", ""
   "``restart_dir``", "path/", "path to restart directory", ""
   "``restart_ext``", "true/false", "read/write halo cells in restart files", ""
   "``restart_file``", "filename prefix", "output file for restart dump", "‘iced’"
   "``pointer_file``", "pointer filename", "contains restart filename", ""
   "``dumpfreq``", "``y``", "write restart every ``dumpfreq_n`` years", "y"
   "", "``m``", "write restart every ``dumpfreq_n`` months", ""
   "", "``d``", "write restart every ``dumpfreq_n`` days", ""
   "``dumpfreq_n``", "integer", "frequency restart data is written", "1"
   "``dump_last``", "true/false", "if true, write restart on last time step of simulation", ""
   "", "", "*Model Output*", ""
   "``bfbflag``", "true/false", "for bit-for-bit diagnostic output", ""
   "``diagfreq``", "integer", "frequency of diagnostic output in ``dt``", "24"
   "", "*e.g.*, 10", "once every 10 time steps", ""
   "``diag_type``", "``stdout``", "write diagnostic output to stdout", ""
   "", "``file``", "write diagnostic output to file", ""
   "``diag_file``", "filename", "diagnostic output file (script may reset)", ""
   "``print_global``", "true/false", "print diagnostic data, global sums", "``.false.``"
   "``print_points``", "true/false", "print diagnostic data for two grid points", "``.false.``"
   "``latpnt``", "real", "latitude of (2) diagnostic points", "" 
   "``lonpnt``", "real", "longitude of (2) diagnostic points", ""
   "``dbug``", "true/false", "if true, write extra diagnostics", "``.false.``"
   "``histfreq``", "string array", "defines output frequencies", ""
   "", "``y``", "write history every ``histfreq_n`` years", ""
   "", "``m``", "write history every ``histfreq_n`` months", ""
   "", "``d``", "write history every ``histfreq_n`` days", ""
   "", "``h``", "write history every ``histfreq_n`` hours", ""
   "", "``1``", "write history every time step", ""
   "", "``x``", "unused frequency stream (not written)", ""
   "``histfreq_n``", "integer array", "frequency history output is written", ""
   "", "0", "do not write to history", ""
   "``hist_avg``", "true", "write time-averaged data", "``.true.``"
   "", "false", "write snapshots of data", ""
   "``history\_dir``", "path/", "path to history output directory", ""
   "``history\_file``", "filename prefix", "output file for history", "‘iceh’"
   "``write\_ic``", "true/false", "write initial condition", ""
   "``incond\_dir``", "path/", "path to initial condition directory", ""
   "``incond\_file``", "filename prefix", "output file for initial condition", "‘iceh’"
   "``runid``", "string", "label for run (currently CESM only)", ""
   "", "", "", ""
   "*grid_nml*", "", "", ""
   "", "", "*Grid*", ""
   "``grid_format``", "``nc``", "read  grid and kmt files", "‘bin’"
   "", "``bin``", "read direct access, binary file", ""
   "``grid_type``", "``rectangular``", "defined in *rectgrid*", ""
   "", "``displaced_pole``", "read from file in *popgrid*", ""
   "", "``tripole``", "read from file in *popgrid*", ""
   "", "``regional``", "read from file in *popgrid*", ""
   "``grid_file``", "filename", "name of grid file to be read", "‘grid’"
   "``kmt_file``", "filename", "name of land mask file to be read", "‘kmt’"
   "``gridcpl_file``", "filename", "input file for coupling grid info", ""
   "``kcatbound``", "``0``", "original category boundary formula", "0"
   "", "``1``", "new formula with round numbers", ""
   "", "``2``", "WMO standard categories", ""
   "", "``-1``", "one category", ""
   "", "", "", ""
   "*domain_nml*", "", "", ""
   "", "", "*Domain*", ""
   "``nprocs``", "integer", "number of processors to use", ""
   "``processor_shape``", "``slenderX1``", "1 processor in the y direction (tall, thin)", ""
   "", "``slenderX2``", "2 processors in the y direction (thin)", ""
   "", "``square-ice``", "more processors in x than y, :math:`\sim` square", ""
   "", "``square-pop``", "more processors in y than x, :math:`\sim` square", ""
   "``distribution_type``", "``cartesian``", "distribute blocks in 2D Cartesian array", ""
   "", "``roundrobin``", "1 block per proc until blocks are used", ""
   "", "``sectcart``", "blocks distributed to domain quadrants", ""
   "", "``sectrobin``", "several blocks per proc until used", ""
   "", "``rake``", "redistribute blocks among neighbors", ""
   "", "``spacecurve``", "distribute blocks via space-filling curves", ""
   "``distribution_weight``", "``block``", "full block size sets ``work_per_block``", ""
   "", "``latitude``", "latitude/ocean sets ``work_per_block``", ""
   "``ew_boundary_type``", "``cyclic``", "periodic boundary conditions in x-direction", ""
   "", "``open``", "Dirichlet boundary conditions in x", ""
   "``ns_boundary_type``", "``cyclic``", "periodic boundary conditions in y-direction", ""
   "", "``open``", "Dirichlet boundary conditions in y", ""
   "", "``tripole``", "U-fold tripole boundary conditions in y", ""
   "", "``tripoleT``", "T-fold tripole boundary conditions in y", ""
   "``maskhalo_dyn``", "true/false", "mask unused halo cells for dynamics", ""
   "``maskhalo_remap``", "true/false", "mask unused halo cells for transport", ""
   "``maskhalo_bound``", "true/false", "mask unused halo cells for boundary updates", ""
   "", "", "", ""
   "*tracer_nml*", "", "", ""
   "", "", "*Tracers*", ""
   "``tr_iage``", "true/false", "ice age", ""
   "``restart_age``", "true/false", "restart tracer values from file", ""
   "``tr_FY``", "true/false", "first-year ice area", ""
   "``restart_FY``", "true/false", "restart tracer values from file", ""
   "``tr_lvl``", "true/false", "level ice area and volume", ""
   "``restart_lvl``", "true/false", "restart tracer values from file", ""
   "``tr_pond_cesm``", "true/false", "CESM melt ponds", ""
   "``restart_pond_cesm``", "true/false", "restart tracer values from file", ""
   "``tr_pond_topo``", "true/false", "topo melt ponds", ""
   "``restart_pond_topo``", "true/false", "restart tracer values from file", ""
   "``tr_pond_lvl``", "true/false", "level-ice melt ponds", ""
   "``restart_pond_lvl``", "true/false", "restart tracer values from file", ""
   "``tr_aero``", "true/false", "aerosols", ""
   "``restart_aero``", "true/false", "restart tracer values from file", ""
   "*thermo_nml*", "", "", ""
   "", "", "*Thermodynamics*", ""
   "``kitd``", "``0``", "delta function ITD approximation", "1"
   "", "``1``", "linear remapping ITD approximation", ""
   "``ktherm``", "``0``", "zero-layer thermodynamic model", ""
   "", "``1``", "Bitz and Lipscomb thermodynamic model", ""
   "", "``2``", "mushy-layer thermodynamic model", ""
   "``conduct``", "``MU71``", "conductivity :cite:`MU71`", ""
   "", "``bubbly``", "conductivity :cite:`PETB07`", ""
   "``a_rapid_mode``", "real", "brine channel diameter", "0.5x10\:math:`^{-3}` m"
   "``Rac_rapid_mode``", "real", "critical Rayleigh number", "10"
   "``aspect_rapid_mode``", "real", "brine convection aspect ratio", "1"
   "``dSdt_slow_mode``", "real", "drainage strength parameter", "-1.5x10\:math:`^{-7}` m/s/K"
   "``phi_c_slow_mode``", ":math:`0<\phi_c < 1`", "critical liquid fraction", "0.05"
   "``phi_i_mushy``", ":math:`0<\phi_i < 1`", "solid fraction at lower boundary", "0.85"
   "", "", "", ""
   "*dynamics_nml*", "", "", ""
   "", "", "*Dynamics*", ""
   "``kdyn``", "``0``", "dynamics OFF", "1"
   "", "``1``", "EVP dynamics", ""
   "", "``2``", "EAP dynamics", ""
   "``revised_evp``", "true/false", "use revised EVP formulation", ""
   "``ndte``", "integer", "number of EVP subcycles", "120"
   "``advection``", "``remap``", "linear remapping advection", "‘remap’"
   "", "``upwind``", "donor cell advection", ""
   "``kstrength``", "``0``", "ice strength formulation :cite:`Hibler79`", "1"
   "", "``1``", "ice strength formulation :cite:`Rothrock75`", ""
   "``krdg_partic``", "``0``", "old ridging participation function", "1"
   "", "``1``", "new ridging participation function", ""
   "``krdg_redist``", "``0``", "old ridging redistribution function", "1"
   "", "``1``", "new ridging redistribution function", ""
   "``mu_rdg``", "real", "e-folding scale of ridged ice", ""
   "``Cf``", "real", "ratio of ridging work to PE change in ridging", "17."
   "", "", "", ""
   "*shortwave_nml*", "", "", ""
   "", "", "*Shortwave*", ""
   "``shortwave``", "``default``", "NCAR CCSM3 distribution method", ""
   "", "``dEdd``", "Delta-Eddington method", ""
   "``albedo_type``", "``default``", "NCAR CCSM3 albedos", "‘default’"
   "", "``constant``", "four constant albedos", ""
   "``albicev``", ":math:`0<\alpha <1`", "visible ice albedo for thicker ice", ""
   "``albicei``", ":math:`0<\alpha <1`", "near infrared ice albedo for thicker ice", ""
   "``albsnowv``", ":math:`0<\alpha <1`", "visible, cold snow albedo", ""
   "``albsnowi``", ":math:`0<\alpha <1`", "near infrared, cold snow albedo", ""
   "``ahmax``", "real", "albedo is constant above this thickness", "0.3 m"
   "``R_ice``", "real", "tuning parameter for sea ice albedo from Delta-Eddington shortwave", ""
   "``R_pnd``", "real", "... for ponded sea ice albedo …", ""
   "``R_snw``", "real", "... for snow (broadband albedo) …", ""
   "``dT_mlt``", "real", ":math:`\Delta` temperature per :math:`\Delta` snow grain radius", ""
   "``rsnw_mlt``", "real", "maximum melting snow grain radius", ""
   "``kalg``", "real", "absorption coefficient for algae", ""
   "", "", "", ""
   "*ponds_nml*", "", "", ""
   "", "", "*Melt Ponds*", ""
   "``hp1``", "real", "critical ice lid thickness for topo ponds", "0.01 m"
   "``hs0``", "real", "snow depth of transition to bare sea ice", "0.03 m"
   "``hs1``", "real", "snow depth of transition to pond ice", "0.03 m"
   "``dpscale``", "real", "time scale for flushing in permeable ice", ":math:`1\times 10^{-3}`"
   "``frzpnd``", "``hlid``", "Stefan refreezing with pond ice thickness", "‘hlid’"
   "", "``cesm``", "CESM refreezing empirical formula", ""
   "``rfracmin``", ":math:`0 \le r_{min} \le 1`", "minimum melt water added to ponds", "0.15"
   "``rfracmax``", ":math:`0 \le r_{max} \le 1`", "maximum melt water added to ponds", "1.0"
   "``pndaspect``", "real", "aspect ratio of pond changes (depth:area)", "0.8"
   "", "", "", ""
   "*zbgc_nml*", "", "", ""
   "", "", "*Biogeochemistry*", ""
   "``tr_brine``", "true/false", "brine height tracer", ""
   "``restart_hbrine``", "true/false", "restart tracer values from file", ""
   "``skl_bgc``", "true/false", "biogeochemistry", ""
   "``bgc_flux_type``", "``Jin2006``", "ice–ocean flux velocity of :cite:`JDWSTWLG06`", ""
   "", "``constant``", "constant ice–ocean flux velocity", ""
   "``restart_bgc``", "true/false", "restart tracer values from file", ""
   "``restore_bgc``", "true/false", "restore nitrate/silicate to data", ""
   "``bgc_data_dir``", "path/", "data directory for bgc", ""
   "``sil_data_type``", "``default``", "default forcing value for silicate", ""
   "", "``clim``", "silicate forcing from ocean climatology :cite:`GLBA06`", ""
   "``nit_data_type``", "``default``", "default forcing value for nitrate", ""
   "", "``clim``", "nitrate forcing from ocean climatology :cite:`GLBA06`", ""
   "", "``sss``", "nitrate forcing equals salinity", ""
   "``tr_bgc_C_sk``", "true/false", "algal carbon tracer", ""
   "``tr_bgc_chl_sk``", "true/false", "algal chlorophyll tracer", ""
   "``tr_bgc_Am_sk``", "true/false", "ammonium tracer", ""
   "``tr_bgc_Sil_sk``", "true/false", "silicate tracer", ""
   "``tr_bgc_DMSPp_sk``", "true/false", "particulate DMSP tracer", ""
   "``tr_bgc_DMSPd_sk``", "true/false", "dissolved DMSP tracer", ""
   "``tr_bgc_DMS_sk``", "true/false", "DMS tracer", ""
   "``phi_snow``", "real", "snow porosity for brine height tracer", ""
   "", "", "", ""
   "*forcing_nml*", "", "", ""
   "", "", "*Forcing*", ""
   "``formdrag``", "true/false", "calculate form drag", ""
   "``atmbndy``", "``default``", "stability-based boundary layer", "‘default’"
   "", "``constant``", "bulk transfer coefficients", ""
   "``fyear_init``", "yyyy", "first year of atmospheric forcing data", ""
   "``ycycle``", "integer", "number of years in forcing data cycle", ""
   "``atm_data_format``", "``nc``", "read  atmo forcing files", ""
   "", "``bin``", "read direct access, binary files", ""
   "``atm_data_type``", "``default``", "constant values defined in the code", ""
   "", "``LYq``", "AOMIP/Large-Yeager forcing data", ""
   "", "``monthly``", "monthly forcing data", ""
   "", "``ncar``", "NCAR bulk forcing data", ""
   "", "``oned``", "column forcing data", ""
   "``atm_data_dir``", "path/", "path to atmospheric forcing data directory", ""
   "``calc_strair``", "true", "calculate wind stress and speed", ""
   "", "false", "read wind stress and speed from files", ""
   "``highfreq``", "true/false", "high-frequency atmo coupling", ""
   "``natmiter``", "integer", "number of atmo boundary layer iterations", ""
   "``calc_Tsfc``", "true/false", "calculate surface temperature", "``.true.``"
   "``precip_units``", "``mks``", "liquid precipitation data units", ""
   "", "``mm_per_month``", "", ""
   "", "``mm_per_sec``", "(same as MKS units)", ""
   "``tfrz_option``", "``minus1p8``", "constant ocean freezing temperature (:math:`-1.8\degC`)", ""
   "", "``linear_salt``", "linear function of salinity (ktherm=1)", ""
   "", "``mushy_layer``", "matches mushy-layer thermo (ktherm=2)", ""
   "``ustar_min``", "real", "minimum value of ocean friction velocity", "0.0005 m/s"
   "``fbot_xfer_type``", "``constant``", "constant ocean heat transfer coefficient", ""
   "", "``Cdn\_ocn``", "variable ocean heat transfer coefficient", ""
   "``update_ocn_f``", "true", "include frazil water/salt fluxes in ocn fluxes", ""
   "", "false", "do not include (when coupling with POP)", ""
   "``l_mpond_fresh``", "true", "retain (topo) pond water until ponds drain", ""
   "", "false", "release (topo) pond water immediately to ocean", ""
   "``oceanmixed_ice``", "true/false", "active ocean mixed layer calculation", "``.true.`` (if uncoupled)"
   "``ocn_data_format``", "``nc``", "read  ocean forcing files", ""
   "", "``bin``", "read direct access, binary files", ""
   "``sss_data_type``", "``default``", "constant values defined in the code", ""
   "", "``clim``", "climatological data", ""
   "", "``near``", "POP ocean forcing data", ""
   "``sst_data_type``", "``default``", "constant values defined in the code", ""
   "", "``clim``", "climatological data", ""
   "", "``ncar``", "POP ocean forcing data", ""
   "``ocn_data_dir``", "path/", "path to oceanic forcing data directory", ""
   "``oceanmixed_file``", "filename", "data file containing ocean forcing data", ""
   "``restore_sst``", "true/false", "restore sst to data", ""
   "``trestore``", "integer", "sst restoring time scale (days)", ""
   "``restore_ice``", "true/false", "restore ice state along lateral boundaries", ""
   "", "", "", ""
   "*icefields_tracer_nml*", "", "", ""
   "", "", "*History Fields*", ""
   "``f_<var>``", "string", "frequency units for writing ``<var>`` to history", ""
   "", "``y``", "write history every ``histfreq_n`` years", ""
   "", "``m``", "write history every ``histfreq_n`` months", ""
   "", "``d``", "write history every ``histfreq_n`` days", ""
   "", "``h``", "write history every ``histfreq_n`` hours", ""
   "", "``1``", "write history every time step", ""
   "", "``x``", "do not write ``<var>`` to history", ""
   "", "``md``", "*e.g.,* write both monthly and daily files", ""
   "``f_<var>_ai``", "", "grid cell average of ``<var>`` (:math:`\times a_i`)", ""
